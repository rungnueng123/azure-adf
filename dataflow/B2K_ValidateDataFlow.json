{
	"name": "B2K_ValidateDataFlow",
	"properties": {
		"folder": {
			"name": "B2KMPS"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "B2K_MCRMRCH",
						"type": "DatasetReference"
					},
					"name": "mcrmrchFixedLength"
				},
				{
					"dataset": {
						"referenceName": "B2K_MCRMRCH",
						"type": "DatasetReference"
					},
					"name": "mcrmrchEmptySource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "B2K_MCRMRCH_DATA_ERROR",
						"type": "DatasetReference"
					},
					"name": "mcrmrchFailSink"
				},
				{
					"dataset": {
						"referenceName": "B2K_MCRMRCH_OUTPUT_TEMP",
						"type": "DatasetReference"
					},
					"name": "mcrmrchSink",
					"description": "Export data to B2K_MCRMRCH_OUTPUT"
				},
				{
					"dataset": {
						"referenceName": "B2K_MCRMRCH_DATA_ERROR_TEMP",
						"type": "DatasetReference"
					},
					"name": "mcrmrchEmptySink"
				}
			],
			"transformations": [
				{
					"name": "mcrmrchDerivedFixedLength"
				},
				{
					"name": "mcrmrchOutputFixedLength"
				},
				{
					"name": "mcrmrchDataCheck"
				},
				{
					"name": "mcrmrchEmptyDerived"
				}
			],
			"scriptLines": [
				"parameters{",
				"     UPDATE_DATE as string (toString(currentTimestamp())),",
				"     FileErrorDate as string ('')",
				"}",
				"source(output(",
				"          data as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> mcrmrchFixedLength",
				"source(output(",
				"          data as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     limit: 1,",
				"     ignoreNoFilesFound: false) ~> mcrmrchEmptySource",
				"mcrmrchDataCheck@mcrmrchDataPass derive(BILLER_MERCHANT_ID = trim(substring(data, 3, 16)),",
				"          ACCOUNT_ID = trim(substring(data, 310, 10)),",
				"          TAX_ID = trim(substring(data, 988, 13)),",
				"          NAME_TH = trim(substring(data, 1029, 40)),",
				"          NAME_EN = trim(substring(data, 23, 30)),",
				"          ACTIVE_STATUS = case(or(substring(data, 210, 1) == '2', substring(data, 210, 1) == '5'), 'A', 'I'),",
				"          UPDATE_DATE = $UPDATE_DATE,",
				"          SOURCE = \"B2K\",",
				"          MID_L11 = trim(substring(data, 3, 11))) ~> mcrmrchDerivedFixedLength",
				"mcrmrchDerivedFixedLength select(mapColumn(",
				"          data,",
				"          BILLER_MERCHANT_ID,",
				"          ACCOUNT_ID,",
				"          TAX_ID,",
				"          NAME_TH,",
				"          NAME_EN,",
				"          ACTIVE_STATUS,",
				"          UPDATE_DATE,",
				"          SOURCE,",
				"          MID_L11",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> mcrmrchOutputFixedLength",
				"mcrmrchFixedLength split(length(data) == 1200,",
				"     disjoint: false) ~> mcrmrchDataCheck@(mcrmrchDataPass, mcrmrchDataFail)",
				"mcrmrchEmptySource derive(data = data) ~> mcrmrchEmptyDerived",
				"mcrmrchDataCheck@mcrmrchDataFail sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:[(concat(\r",
				"    'B2K_MCRMRCH_DATA_ERROR_',\r",
				"    $FileErrorDate,\r",
				"    '.txt'\r",
				"))],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> mcrmrchFailSink",
				"mcrmrchOutputFixedLength sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['B2K_MCRMRCH_OUTPUT_TEMP.txt'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          BILLER_MERCHANT_ID,",
				"          ACCOUNT_ID,",
				"          TAX_ID,",
				"          NAME_TH,",
				"          NAME_EN,",
				"          ACTIVE_STATUS,",
				"          UPDATE_DATE,",
				"          SOURCE,",
				"          MID_L11",
				"     ),",
				"     partitionBy('hash', 1)) ~> mcrmrchSink",
				"mcrmrchEmptyDerived sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:[(concat(\r",
				"    'B2K_MCRMRCH_DATA_ERROR_TEMP_',\r",
				"    $FileErrorDate,\r",
				"    '.txt'\r",
				"))],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> mcrmrchEmptySink"
			]
		}
	}
}