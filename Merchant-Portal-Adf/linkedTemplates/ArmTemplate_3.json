{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Merchant-Portal-Adf"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/MasterMPSPipeline_001')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get File From SFTP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SFTP MPS to Blob",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Insert MPS To DB",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get File From SFTP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MPS Blob to DB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send Email Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set PipelineStep 1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set PipelineStep 2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set PipelineStep 3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Email",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pipelineStep": {
									"value": "@variables('pipelineStep')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "updateMerchantProfile",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Insert MPS To DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[updateMerchantProfile]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set PipelineStep 1",
						"description": "Error key message",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get File From SFTP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineStep",
							"value": "SMC_MPS"
						}
					},
					{
						"name": "Set PipelineStep 2",
						"description": "Error key message",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Insert MPS To DB",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineStep",
							"value": "SMC_MPS"
						}
					},
					{
						"name": "Set PipelineStep 3",
						"description": "Error key message",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "updateMerchantProfile",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineStep",
							"value": "SMC_MPS"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"pipelineStep": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SMC_MPS"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T09:46:48Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MasterMPSPipeline_002')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Insert MPS To DB",
						"description": "Process collect MPS file from blob",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MPS Blob to DB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send Email Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set PipelineStep 2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set PipelineStep 1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Email",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pipelineStep": {
									"value": "@variables('pipelineStep')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "updateMerchantProfile",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Insert MPS To DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[updateMerchantProfile]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set PipelineStep 1",
						"description": "Error key message",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Insert MPS To DB",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineStep",
							"value": "SMC_MPS"
						}
					},
					{
						"name": "Set PipelineStep 2",
						"description": "Error key message",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "updateMerchantProfile",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineStep",
							"value": "SMC_MPS"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"pipelineStep": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SMC_MPS"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T09:46:48Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/triggerKafKaLog')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Send Log Kafka",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-01-09T12:00:00",
						"timeZone": "SE Asia Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								1
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/triggerActivityLog')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "MasterActivityPipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-01-09T12:00:00",
						"timeZone": "SE Asia Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								1
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/triggerB2K')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "MasterB2KPipeline_001",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-01-17T12:00:00",
						"timeZone": "SE Asia Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								1
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/triggerMPS')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "MasterMPSPipeline_001",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-01-09T00:00:00",
						"timeZone": "SE Asia Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								1
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/MasterMPSPipeline_001')]"
			]
		}
	]
}