{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Merchant-Portal-Adf"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/MPS Blob to DB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FixLenghtProcessFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Set UPDATE_DATE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "MPS_FixLenghtProcessDataFlow",
								"type": "DataFlowReference",
								"parameters": {
									"UPDATE_DATE": {
										"value": "'@{variables('UPDATE_DATE')}'",
										"type": "Expression"
									},
									"FileErrorDate": {
										"value": "'@{variables('FileErrorDate')}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"ppmerchantFixedLength": {},
									"ODSPP": {},
									"ppdebitadviceFixedLength": {},
									"ppmerchantSink": {},
									"ppdebitadviceSink": {},
									"ppmerchantFailSink": {},
									"ppmerchantFilterFailDataSink": {},
									"ppmerchantFilterFailKeySink": {},
									"odsppFailSink": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "AzureIR-ManagedVNet",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Set UPDATE_DATE",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set FileErrorDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "UPDATE_DATE",
							"value": {
								"value": "@formatDateTime(convertTimeZone(utcNow(), 'UTC', 'SE Asia Standard Time', 'yyyy-MM-ddTHH:mm:ss'),'yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Insert MPS_PP_MerchantFile to SQL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "FixLenghtProcessFlow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MPS_PP_MerchantFile to SQL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Insert MPS_PP_DebitAdvice to SQL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "FixLenghtProcessFlow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MPS_PP_DebitAdvice to SQL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Set FileErrorDate",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "FileErrorDate",
							"value": {
								"value": "@formatDateTime(subtractFromTime(getFutureTime(7, 'Hour', 'yyyy-MM-dd HH:mm:ss'),1,'Day'),'yyyyMMdd')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"UPDATE_DATE": {
						"type": "String"
					},
					"FileErrorDate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SMC_MPS"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T09:46:48Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SMC_MasterActivityPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Merchant",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute SCB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SMC_MERCHANT_ACTIVITY_LOG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"jobDate": {
									"value": "@variables('jobDate')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute SCB",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set Job Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SMC_SCB_ACTIVITY_LOG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"jobDate": {
									"value": "@variables('jobDate')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Send Email Error 2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set PipelineStep 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Email",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pipelineStep": {
									"value": "@variables('pipelineStep')",
									"type": "Expression"
								},
								"pipelineMstKey": {
									"value": "@variables('pipelineMstKey')",
									"type": "Expression"
								},
								"pipelineName": "SMC_MasterActivityPipeline",
								"pipelineError": {
									"value": "@variables('pipelineError')",
									"type": "Expression"
								},
								"pipelineSubjectDate": {
									"value": "@variables('pipelineSubjectDate')",
									"type": "Expression"
								},
								"pipelineNameRerun": "SMC_MasterActivityPipeline"
							}
						}
					},
					{
						"name": "Set PipelineStep 1",
						"description": "Error key message",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set PipelineError 1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineStep",
							"value": "ACHRIVELOG_DATA_FAILED"
						}
					},
					{
						"name": "Set PipelineStep 2",
						"description": "Error key message",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set PipelineError 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineStep",
							"value": "ACHRIVELOG_DATA_FAILED"
						}
					},
					{
						"name": "Send Email Error 1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set PipelineStep 1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Email",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pipelineStep": {
									"value": "@variables('pipelineStep')",
									"type": "Expression"
								},
								"pipelineMstKey": {
									"value": "@variables('pipelineMstKey')",
									"type": "Expression"
								},
								"pipelineName": "SMC_MasterActivityPipeline",
								"pipelineError": {
									"value": "@variables('pipelineError')",
									"type": "Expression"
								},
								"pipelineSubjectDate": {
									"value": "@variables('pipelineSubjectDate')",
									"type": "Expression"
								},
								"pipelineNameRerun": "SMC_MasterActivityPipeline"
							}
						}
					},
					{
						"name": "Set PipelineError 1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set PipelineSubjectDate 1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineError",
							"value": {
								"value": "@activity('Execute SCB').error.Message",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set PipelineError 2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set PipelineSubjectDate 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineError",
							"value": {
								"value": "@activity('Execute Merchant').error.Message",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set PipelineSubjectDate 1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Execute SCB",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineSubjectDate",
							"value": {
								"value": "@formatDateTime(convertTimeZone(utcNow(), 'UTC', 'SE Asia Standard Time', 'yyyy-MM-ddTHH:mm:ss'),'dd/MM/yyyy HH:mm')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set PipelineSubjectDate 2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Execute Merchant",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineSubjectDate",
							"value": {
								"value": "@formatDateTime(convertTimeZone(utcNow(), 'UTC', 'SE Asia Standard Time', 'yyyy-MM-ddTHH:mm:ss'),'dd/MM/yyyy HH:mm')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Job Date",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "jobDate",
							"value": {
								"value": "@convertTimeZone(utcnow(), 'UTC', 'SE Asia Standard Time', 'yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "purgeActivityLog",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Merchant",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Purge Activity Log",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"jobDate": {
									"value": "@variables('jobDate')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "If ConditionSCB",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "purgeActivityLog",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@if(equals(activity('purgeActivityLog').output.pipelineReturnValue.result.CODE, '200'), true, false)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send Email Error 3",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Set PipelineStep 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send Email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"pipelineStep": {
												"value": "@variables('pipelineStep')",
												"type": "Expression"
											},
											"pipelineMstKey": {
												"value": "@variables('pipelineMstKey')",
												"type": "Expression"
											},
											"pipelineName": "SMC_MasterActivityPipeline",
											"pipelineError": {
												"value": "@variables('pipelineError')",
												"type": "Expression"
											},
											"pipelineSubjectDate": {
												"value": "@variables('pipelineSubjectDate')",
												"type": "Expression"
											},
											"pipelineNameRerun": "SMC_MasterActivityPipeline"
										}
									}
								},
								{
									"name": "Set PipelineStep 3",
									"description": "Error key message",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set PipelineError 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "pipelineStep",
										"value": "ACHRIVELOG_DATA_FAILED"
									}
								},
								{
									"name": "Set PipelineError 3",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set PipelineSubjectDate 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "pipelineError",
										"value": {
											"value": "@concat(\n    'ERROR_PROCEDURE : ',\n    activity('purgeActivityLog').output.pipelineReturnValue.result.ErrorProcedure,\n    '<br>ERROR_LINE : ',\n    activity('purgeActivityLog').output.pipelineReturnValue.result.ErrorLine,\n    '<br>ERROR_MESSAGE : ',\n    activity('purgeActivityLog').output.pipelineReturnValue.result.ErrorMessage\n)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set PipelineSubjectDate 3",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "pipelineSubjectDate",
										"value": {
											"value": "@formatDateTime(convertTimeZone(utcNow(), 'UTC', 'SE Asia Standard Time', 'yyyy-MM-ddTHH:mm:ss'),'dd/MM/yyyy HH:mm')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"pipelineStep": {
						"type": "String"
					},
					"pipelineMstKey": {
						"type": "String",
						"defaultValue": "4345c0af4223436bb8dce390b2b8aa10"
					},
					"pipelineError": {
						"type": "String"
					},
					"pipelineSubjectDate": {
						"type": "String"
					},
					"jobDate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SMC_ArchiveLog"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/triggerKafKaLog_1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "SMC_SendLogKafka",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-01-09T12:00:00",
						"timeZone": "SE Asia Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								13
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/triggerKafKaLog_2')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "SMC_SendLogKafka",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-01-09T12:00:00",
						"timeZone": "SE Asia Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								21
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/triggerKafKaLog_3')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "SMC_SendLogKafka",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-01-09T12:00:00",
						"timeZone": "SE Asia Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								5
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/triggerTaskExpire')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "SMC_MasterTaskExpirePipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-02-15T12:39:00",
						"timeZone": "SE Asia Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								1
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SMC_MasterB2KPipeline_001')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get File From SFTP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SFTP B2K to Blob",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Insert B2K To DB",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get File From SFTP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "B2K Blob to DB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send Email Error 1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set PipelineStep 1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Email",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pipelineStep": {
									"value": "@variables('pipelineStep')",
									"type": "Expression"
								},
								"pipelineMstKey": {
									"value": "@variables('pipelineMstKey')",
									"type": "Expression"
								},
								"pipelineName": "SMC_MasterB2KPipeline_001",
								"pipelineError": {
									"value": "@variables('pipelineError')",
									"type": "Expression"
								},
								"pipelineSubjectDate": {
									"value": "@variables('pipelineSubjectDate')",
									"type": "Expression"
								},
								"pipelineNameRerun": "SMC_MasterB2KPipeline_001"
							}
						}
					},
					{
						"name": "Set PipelineStep 1",
						"description": "Error key message",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set PipelineError 1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineStep",
							"value": "B2K_SFTP_FAILED"
						}
					},
					{
						"name": "Set PipelineStep 2",
						"description": "Error key message",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set PipelineError 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineStep",
							"value": "B2K_DATA_FAILED"
						}
					},
					{
						"name": "Set PipelineStep 3",
						"description": "Error key message",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set PipelineError 3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineStep",
							"value": "B2K_INTEGRATE_FAILED"
						}
					},
					{
						"name": "Update Merchant Profile",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Insert B2K To DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Update Merchant Profile B2K",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send Email Error 2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set PipelineStep 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Email",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pipelineStep": {
									"value": "@variables('pipelineStep')",
									"type": "Expression"
								},
								"pipelineMstKey": {
									"value": "@variables('pipelineMstKey')",
									"type": "Expression"
								},
								"pipelineName": "SMC_MasterB2KPipeline_002",
								"pipelineError": {
									"value": "@variables('pipelineError')",
									"type": "Expression"
								},
								"pipelineSubjectDate": {
									"value": "@variables('pipelineSubjectDate')",
									"type": "Expression"
								},
								"pipelineNameRerun": "SMC_MasterB2KPipeline_001"
							}
						}
					},
					{
						"name": "Send Email Error 3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set PipelineStep 3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Email",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pipelineStep": {
									"value": "@variables('pipelineStep')",
									"type": "Expression"
								},
								"pipelineMstKey": {
									"value": "@variables('pipelineMstKey')",
									"type": "Expression"
								},
								"pipelineName": "SMC_MasterB2KPipeline_003",
								"pipelineError": {
									"value": "@variables('pipelineError')",
									"type": "Expression"
								},
								"pipelineSubjectDate": {
									"value": "@variables('pipelineSubjectDate')",
									"type": "Expression"
								},
								"pipelineNameRerun": "SMC_MasterB2KPipeline_001"
							}
						}
					},
					{
						"name": "Set PipelineError 1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set PipelineSubjectDate 1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineError",
							"value": {
								"value": "@activity('Get File From SFTP').error.Message",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set PipelineError 2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set PipelineSubjectDate 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineError",
							"value": {
								"value": "@activity('Insert B2K To DB').error.Message",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set PipelineError 3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set PipelineSubjectDate 3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineError",
							"value": {
								"value": "@activity('Update Merchant Profile').error.Message",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set PipelineSubjectDate 1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get File From SFTP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineSubjectDate",
							"value": {
								"value": "@formatDateTime(subtractFromTime(convertTimeZone(utcNow(), 'UTC', 'SE Asia Standard Time', 'yyyy-MM-ddTHH:mm:ss'),1,'Day'),'dd/MM/yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set PipelineSubjectDate 2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Insert B2K To DB",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineSubjectDate",
							"value": {
								"value": "@formatDateTime(subtractFromTime(convertTimeZone(utcNow(), 'UTC', 'SE Asia Standard Time', 'yyyy-MM-ddTHH:mm:ss'),1,'Day'),'dd/MM/yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set PipelineSubjectDate 3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Update Merchant Profile",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineSubjectDate",
							"value": {
								"value": "@formatDateTime(subtractFromTime(convertTimeZone(utcNow(), 'UTC', 'SE Asia Standard Time', 'yyyy-MM-ddTHH:mm:ss'),1,'Day'),'dd/MM/yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Result Store",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Update Merchant Profile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "resultCode",
							"value": {
								"value": "@if(equals(activity('Update Merchant Profile').output.pipelineReturnValue.result.CODE, '000'), true, false)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition resultCode",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set Result Store",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@variables('resultCode')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set PipelineSubjectDate 4",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "pipelineSubjectDate",
										"value": {
											"value": "@formatDateTime(subtractFromTime(convertTimeZone(utcNow(), 'UTC', 'SE Asia Standard Time', 'yyyy-MM-ddTHH:mm:ss'),1,'Day'),'dd/MM/yyyy')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set PipelineError 4",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set PipelineSubjectDate 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "pipelineError",
										"value": {
											"value": "@concat(\n    'ERROR_PROCEDURE : ',\n    activity('Update Merchant Profile').output.pipelineReturnValue.result.ErrorProcedure,\n    '<br>ERROR_LINE : ',\n    activity('Update Merchant Profile').output.pipelineReturnValue.result.ErrorLine,\n    '<br>ERROR_MESSAGE : ',\n    activity('Update Merchant Profile').output.pipelineReturnValue.result.ErrorMessage\n)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set PipelineStep 4",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set PipelineError 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "pipelineStep",
										"value": "B2K_INTEGRATE_FAILED"
									}
								},
								{
									"name": "Send Email Error 4",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Set PipelineStep 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send Email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"pipelineStep": {
												"value": "@variables('pipelineStep')",
												"type": "Expression"
											},
											"pipelineMstKey": {
												"value": "@variables('pipelineMstKey')",
												"type": "Expression"
											},
											"pipelineName": "SMC_MasterB2KPipeline_003",
											"pipelineError": {
												"value": "@variables('pipelineError')",
												"type": "Expression"
											},
											"pipelineSubjectDate": {
												"value": "@variables('pipelineSubjectDate')",
												"type": "Expression"
											},
											"pipelineNameRerun": "SMC_MasterB2KPipeline_001"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"pipelineStep": {
						"type": "String"
					},
					"pipelineMstKey": {
						"type": "String",
						"defaultValue": "777c4388223e47e2a975478a043947dc"
					},
					"pipelineError": {
						"type": "String"
					},
					"pipelineSubjectDate": {
						"type": "String"
					},
					"resultCode": {
						"type": "Boolean"
					}
				},
				"folder": {
					"name": "SMC_B2K"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T09:46:48Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SMC_MasterB2KPipeline_002')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Insert B2K To DB",
						"description": "Process collect B2K file from blob",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "B2K Blob to DB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send Email Error 2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set PipelineStep 1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Email",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pipelineStep": {
									"value": "@variables('pipelineStep')",
									"type": "Expression"
								},
								"pipelineMstKey": {
									"value": "@variables('pipelineMstKey')",
									"type": "Expression"
								},
								"pipelineName": "SMC_MasterB2KPipeline_002",
								"pipelineError": {
									"value": "@variables('pipelineError')",
									"type": "Expression"
								},
								"pipelineSubjectDate": {
									"value": "@variables('pipelineSubjectDate')",
									"type": "Expression"
								},
								"pipelineNameRerun": "SMC_MasterB2KPipeline_002"
							}
						}
					},
					{
						"name": "Set PipelineStep 1",
						"description": "Error key message",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set PipelineError 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineStep",
							"value": "B2K_DATA_FAILED"
						}
					},
					{
						"name": "Set PipelineStep 2",
						"description": "Error key message",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set PipelineError 3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineStep",
							"value": "B2K_INTEGRATE_FAILED"
						}
					},
					{
						"name": "Update Merchant Profile",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Insert B2K To DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Update Merchant Profile B2K",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send Email Error 3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set PipelineStep 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Email",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pipelineStep": {
									"value": "@variables('pipelineStep')",
									"type": "Expression"
								},
								"pipelineMstKey": {
									"value": "@variables('pipelineMstKey')",
									"type": "Expression"
								},
								"pipelineName": "SMC_MasterB2KPipeline_003",
								"pipelineError": {
									"value": "@variables('pipelineError')",
									"type": "Expression"
								},
								"pipelineSubjectDate": {
									"value": "@variables('pipelineSubjectDate')",
									"type": "Expression"
								},
								"pipelineNameRerun": "SMC_MasterB2KPipeline_002"
							}
						}
					},
					{
						"name": "Set PipelineError 2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set PipelineSubjectDate 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineError",
							"value": {
								"value": "@activity('Insert B2K To DB').error.Message",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set PipelineError 3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set PipelineSubjectDate 3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineError",
							"value": {
								"value": "@activity('Update Merchant Profile').error.Message",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set PipelineSubjectDate 2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Insert B2K To DB",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineSubjectDate",
							"value": {
								"value": "@formatDateTime(subtractFromTime(convertTimeZone(utcNow(), 'UTC', 'SE Asia Standard Time', 'yyyy-MM-ddTHH:mm:ss'),1,'Day'),'dd/MM/yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set PipelineSubjectDate 3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Update Merchant Profile",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineSubjectDate",
							"value": {
								"value": "@formatDateTime(subtractFromTime(convertTimeZone(utcNow(), 'UTC', 'SE Asia Standard Time', 'yyyy-MM-ddTHH:mm:ss'),1,'Day'),'dd/MM/yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Result Store",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Update Merchant Profile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "resultCode",
							"value": {
								"value": "@if(equals(activity('Update Merchant Profile').output.pipelineReturnValue.result.CODE, '000'), true, false)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition resultCode",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set Result Store",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@variables('resultCode')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set PipelineSubjectDate 4",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "pipelineSubjectDate",
										"value": {
											"value": "@formatDateTime(subtractFromTime(convertTimeZone(utcNow(), 'UTC', 'SE Asia Standard Time', 'yyyy-MM-ddTHH:mm:ss'),1,'Day'),'dd/MM/yyyy')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set PipelineError 4",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set PipelineSubjectDate 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "pipelineError",
										"value": {
											"value": "@concat(\n    'ERROR_PROCEDURE : ',\n    activity('Update Merchant Profile').output.pipelineReturnValue.result.ErrorProcedure,\n    '<br>ERROR_LINE : ',\n    activity('Update Merchant Profile').output.pipelineReturnValue.result.ErrorLine,\n    '<br>ERROR_MESSAGE : ',\n    activity('Update Merchant Profile').output.pipelineReturnValue.result.ErrorMessage\n)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set PipelineStep 4",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set PipelineError 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "pipelineStep",
										"value": "B2K_INTEGRATE_FAILED"
									}
								},
								{
									"name": "Send Email Error 4",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Set PipelineStep 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send Email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"pipelineStep": {
												"value": "@variables('pipelineStep')",
												"type": "Expression"
											},
											"pipelineMstKey": {
												"value": "@variables('pipelineMstKey')",
												"type": "Expression"
											},
											"pipelineName": "SMC_MasterB2KPipeline_003",
											"pipelineError": {
												"value": "@variables('pipelineError')",
												"type": "Expression"
											},
											"pipelineSubjectDate": {
												"value": "@variables('pipelineSubjectDate')",
												"type": "Expression"
											},
											"pipelineNameRerun": "SMC_MasterB2KPipeline_002"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"pipelineStep": {
						"type": "String"
					},
					"pipelineMstKey": {
						"type": "String",
						"defaultValue": "777c4388223e47e2a975478a043947dc"
					},
					"pipelineError": {
						"type": "String"
					},
					"pipelineSubjectDate": {
						"type": "String"
					},
					"resultCode": {
						"type": "Boolean"
					}
				},
				"folder": {
					"name": "SMC_B2K"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T09:46:48Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SMC_MasterMPSPipeline_001')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get File From SFTP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SFTP MPS to Blob",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Insert MPS To DB",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get File From SFTP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MPS Blob to DB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send Email Error 1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set PipelineStep 1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Email",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pipelineStep": {
									"value": "@variables('pipelineStep')",
									"type": "Expression"
								},
								"pipelineMstKey": {
									"value": "@variables('pipelineMstKey')",
									"type": "Expression"
								},
								"pipelineName": "SMC_MasterMPSPipeline_001",
								"pipelineError": {
									"value": "@variables('pipelineError')",
									"type": "Expression"
								},
								"pipelineSubjectDate": {
									"value": "@variables('pipelineSubjectDate')",
									"type": "Expression"
								},
								"pipelineNameRerun": "SMC_MasterMPSPipeline_001"
							}
						}
					},
					{
						"name": "Set PipelineStep 1",
						"description": "Error key message",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set PipelineError 1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineStep",
							"value": "MPS_SFTP_FAILED"
						}
					},
					{
						"name": "Set PipelineStep 2",
						"description": "Error key message",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set PipelineError 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineStep",
							"value": "MPS_DATA_FAILED"
						}
					},
					{
						"name": "Set PipelineStep 3",
						"description": "Error key message",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set PipelineError 3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineStep",
							"value": "MPS_INTEGRATE_FAILED"
						}
					},
					{
						"name": "Update Merchant Profile",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Insert MPS To DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Update Merchant Profile MPS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send Email Error 2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set PipelineStep 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Email",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pipelineStep": {
									"value": "@variables('pipelineStep')",
									"type": "Expression"
								},
								"pipelineMstKey": {
									"value": "@variables('pipelineMstKey')",
									"type": "Expression"
								},
								"pipelineName": "SMC_MasterMPSPipeline_002",
								"pipelineError": {
									"value": "@variables('pipelineError')",
									"type": "Expression"
								},
								"pipelineSubjectDate": {
									"value": "@variables('pipelineSubjectDate')",
									"type": "Expression"
								},
								"pipelineNameRerun": "SMC_MasterMPSPipeline_001"
							}
						}
					},
					{
						"name": "Send Email Error 3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set PipelineStep 3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Email",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pipelineStep": {
									"value": "@variables('pipelineStep')",
									"type": "Expression"
								},
								"pipelineMstKey": {
									"value": "@variables('pipelineMstKey')",
									"type": "Expression"
								},
								"pipelineName": "SMC_MasterMPSPipeline_003",
								"pipelineError": {
									"value": "@variables('pipelineError')",
									"type": "Expression"
								},
								"pipelineSubjectDate": {
									"value": "@variables('pipelineSubjectDate')",
									"type": "Expression"
								},
								"pipelineNameRerun": "SMC_MasterMPSPipeline_001"
							}
						}
					},
					{
						"name": "Set PipelineError 1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set PipelineSubjectDate 1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineError",
							"value": {
								"value": "@activity('Get File From SFTP').error.Message",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set PipelineError 2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set PipelineSubjectDate 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineError",
							"value": {
								"value": "@activity('Insert MPS To DB').error.Message",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set PipelineError 3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set PipelineSubjectDate 3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineError",
							"value": {
								"value": "@activity('Update Merchant Profile').error.Message",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set PipelineSubjectDate 1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get File From SFTP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineSubjectDate",
							"value": {
								"value": "@formatDateTime(subtractFromTime(convertTimeZone(utcNow(), 'UTC', 'SE Asia Standard Time', 'yyyy-MM-ddTHH:mm:ss'),1,'Day'),'dd/MM/yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set PipelineSubjectDate 2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Insert MPS To DB",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineSubjectDate",
							"value": {
								"value": "@formatDateTime(subtractFromTime(convertTimeZone(utcNow(), 'UTC', 'SE Asia Standard Time', 'yyyy-MM-ddTHH:mm:ss'),1,'Day'),'dd/MM/yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set PipelineSubjectDate 3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Update Merchant Profile",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineSubjectDate",
							"value": {
								"value": "@formatDateTime(subtractFromTime(convertTimeZone(utcNow(), 'UTC', 'SE Asia Standard Time', 'yyyy-MM-ddTHH:mm:ss'),1,'Day'),'dd/MM/yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Result Store",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Update Merchant Profile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "resultCode",
							"value": {
								"value": "@if(equals(activity('Update Merchant Profile').output.pipelineReturnValue.result.CODE, '000'), true, false)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition resultCode",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set Result Store",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@variables('resultCode')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set PipelineSubjectDate 4",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "pipelineSubjectDate",
										"value": {
											"value": "@formatDateTime(subtractFromTime(convertTimeZone(utcNow(), 'UTC', 'SE Asia Standard Time', 'yyyy-MM-ddTHH:mm:ss'),1,'Day'),'dd/MM/yyyy')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set PipelineError 4",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set PipelineSubjectDate 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "pipelineError",
										"value": {
											"value": "@concat(\n    'ERROR_PROCEDURE : ',\n    activity('Update Merchant Profile').output.pipelineReturnValue.result.ErrorProcedure,\n    '<br>ERROR_LINE : ',\n    activity('Update Merchant Profile').output.pipelineReturnValue.result.ErrorLine,\n    '<br>ERROR_MESSAGE : ',\n    activity('Update Merchant Profile').output.pipelineReturnValue.result.ErrorMessage\n)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set PipelineStep 4",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set PipelineError 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "pipelineStep",
										"value": "MPS_INTEGRATE_FAILED"
									}
								},
								{
									"name": "Send Email Error 4",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Set PipelineStep 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send Email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"pipelineStep": {
												"value": "@variables('pipelineStep')",
												"type": "Expression"
											},
											"pipelineMstKey": {
												"value": "@variables('pipelineMstKey')",
												"type": "Expression"
											},
											"pipelineName": "SMC_MasterMPSPipeline_003",
											"pipelineError": {
												"value": "@variables('pipelineError')",
												"type": "Expression"
											},
											"pipelineSubjectDate": {
												"value": "@variables('pipelineSubjectDate')",
												"type": "Expression"
											},
											"pipelineNameRerun": "SMC_MasterMPSPipeline_001"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"pipelineStep": {
						"type": "String"
					},
					"pipelineMstKey": {
						"type": "String",
						"defaultValue": "6f215d46e6c64b58bea218b89094b01c"
					},
					"pipelineError": {
						"type": "String"
					},
					"pipelineSubjectDate": {
						"type": "String"
					},
					"resultCode": {
						"type": "Boolean"
					}
				},
				"folder": {
					"name": "SMC_MPS"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T09:46:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/MPS Blob to DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SMC_MasterMPSPipeline_002')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Insert MPS To DB",
						"description": "Process collect MPS file from blob",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MPS Blob to DB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send Email Error 2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set PipelineStep 1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Email",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pipelineStep": {
									"value": "@variables('pipelineStep')",
									"type": "Expression"
								},
								"pipelineMstKey": {
									"value": "@variables('pipelineMstKey')",
									"type": "Expression"
								},
								"pipelineName": "SMC_MasterMPSPipeline_002",
								"pipelineError": {
									"value": "@variables('pipelineError')",
									"type": "Expression"
								},
								"pipelineSubjectDate": {
									"value": "@variables('pipelineSubjectDate')",
									"type": "Expression"
								},
								"pipelineNameRerun": "SMC_MasterMPSPipeline_002"
							}
						}
					},
					{
						"name": "Set PipelineStep 1",
						"description": "Error key message",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set PipelineError 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineStep",
							"value": "MPS_DATA_FAILED"
						}
					},
					{
						"name": "Set PipelineStep 2",
						"description": "Error key message",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set PipelineError 3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineStep",
							"value": "MPS_INTEGRATE_FAILED"
						}
					},
					{
						"name": "Update Merchant Profile",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Insert MPS To DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Update Merchant Profile MPS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send Email Error 3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set PipelineStep 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Email",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pipelineStep": {
									"value": "@variables('pipelineStep')",
									"type": "Expression"
								},
								"pipelineMstKey": {
									"value": "@variables('pipelineMstKey')",
									"type": "Expression"
								},
								"pipelineName": "SMC_MasterMPSPipeline_003",
								"pipelineError": {
									"value": "@variables('pipelineError')",
									"type": "Expression"
								},
								"pipelineSubjectDate": {
									"value": "@variables('pipelineSubjectDate')",
									"type": "Expression"
								},
								"pipelineNameRerun": "SMC_MasterMPSPipeline_002"
							}
						}
					},
					{
						"name": "Set PipelineError 2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set PipelineSubjectDate 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineError",
							"value": {
								"value": "@activity('Insert MPS To DB').error.Message",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set PipelineError 3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set PipelineSubjectDate 3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineError",
							"value": {
								"value": "@activity('Update Merchant Profile').error.Message",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set PipelineSubjectDate 2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Insert MPS To DB",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineSubjectDate",
							"value": {
								"value": "@formatDateTime(subtractFromTime(convertTimeZone(utcNow(), 'UTC', 'SE Asia Standard Time', 'yyyy-MM-ddTHH:mm:ss'),1,'Day'),'dd/MM/yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set PipelineSubjectDate 3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Update Merchant Profile",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineSubjectDate",
							"value": {
								"value": "@formatDateTime(subtractFromTime(convertTimeZone(utcNow(), 'UTC', 'SE Asia Standard Time', 'yyyy-MM-ddTHH:mm:ss'),1,'Day'),'dd/MM/yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Result Store",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Update Merchant Profile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "resultCode",
							"value": {
								"value": "@if(equals(activity('Update Merchant Profile').output.pipelineReturnValue.result.CODE, '000'), true, false)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition resultCode",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set Result Store",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@variables('resultCode')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set PipelineSubjectDate 4",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "pipelineSubjectDate",
										"value": {
											"value": "@formatDateTime(subtractFromTime(convertTimeZone(utcNow(), 'UTC', 'SE Asia Standard Time', 'yyyy-MM-ddTHH:mm:ss'),1,'Day'),'dd/MM/yyyy')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set PipelineError 4",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set PipelineSubjectDate 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "pipelineError",
										"value": {
											"value": "@concat(\n    'ERROR_PROCEDURE : ',\n    activity('Update Merchant Profile').output.pipelineReturnValue.result.ErrorProcedure,\n    '<br>ERROR_LINE : ',\n    activity('Update Merchant Profile').output.pipelineReturnValue.result.ErrorLine,\n    '<br>ERROR_MESSAGE : ',\n    activity('Update Merchant Profile').output.pipelineReturnValue.result.ErrorMessage\n)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set PipelineStep 4",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set PipelineError 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "pipelineStep",
										"value": "MPS_INTEGRATE_FAILED"
									}
								},
								{
									"name": "Send Email Error 4",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Set PipelineStep 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send Email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"pipelineStep": {
												"value": "@variables('pipelineStep')",
												"type": "Expression"
											},
											"pipelineMstKey": {
												"value": "@variables('pipelineMstKey')",
												"type": "Expression"
											},
											"pipelineName": "SMC_MasterMPSPipeline_003",
											"pipelineError": {
												"value": "@variables('pipelineError')",
												"type": "Expression"
											},
											"pipelineSubjectDate": {
												"value": "@variables('pipelineSubjectDate')",
												"type": "Expression"
											},
											"pipelineNameRerun": "SMC_MasterMPSPipeline_002"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"pipelineStep": {
						"type": "String"
					},
					"pipelineMstKey": {
						"type": "String",
						"defaultValue": "6f215d46e6c64b58bea218b89094b01c"
					},
					"pipelineError": {
						"type": "String"
					},
					"pipelineSubjectDate": {
						"type": "String"
					},
					"resultCode": {
						"type": "Boolean"
					}
				},
				"folder": {
					"name": "SMC_MPS"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T09:46:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/MPS Blob to DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/triggerActivityLog')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "SMC_MasterActivityPipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-01-09T12:00:00",
						"timeZone": "SE Asia Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								1
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SMC_MasterActivityPipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/triggerB2K')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "SMC_MasterB2KPipeline_001",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-01-17T12:00:00",
						"timeZone": "SE Asia Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								1
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SMC_MasterB2KPipeline_001')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/triggerMPS')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "SMC_MasterMPSPipeline_001",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-01-09T00:00:00",
						"timeZone": "SE Asia Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								1
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SMC_MasterMPSPipeline_001')]"
			]
		}
	]
}