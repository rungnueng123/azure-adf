{
	"name": "B2K Blob to DB",
	"properties": {
		"activities": [
			{
				"name": "FixLenghtProcessFlow",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Process MCRMRCH",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "B2K_FixLenghtProcessDataFlow",
						"type": "DataFlowReference",
						"parameters": {
							"UPDATE_DATE": {
								"value": "'@{variables('UPDATE_DATE')}'",
								"type": "Expression"
							},
							"FileErrorDate": {
								"value": "'@{variables('FileErrorDate')}'",
								"type": "Expression"
							}
						}
					},
					"integrationRuntime": {
						"referenceName": "AzureIR-ManagedVNet",
						"type": "IntegrationRuntimeReference"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "Set UPDATE_DATE",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set FileErrorDate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "UPDATE_DATE",
					"value": {
						"value": "@formatDateTime(convertTimeZone(utcNow(), 'UTC', 'SE Asia Standard Time', 'yyyy-MM-ddTHH:mm:ss'),'yyyy-MM-dd HH:mm:ss')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Insert B2K_MCRMRCH to SQL",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "FixLenghtProcessFlow",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "B2K_MCRMRCH to SQL",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "Insert B2K_EDCTERM to SQL",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "FixLenghtProcessFlow",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "B2K_EDCTERM to SQL",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "Insert B2K_EMSMRMST to SQL",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "FixLenghtProcessFlow",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "B2K_EMSMRMST to SQL",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "Set FileErrorDate",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "FileErrorDate",
					"value": {
						"value": "@formatDateTime(subtractFromTime(getFutureTime(7, 'Hour', 'yyyy-MM-dd HH:mm:ss'),1,'Day'),'yyyyMMdd')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Copy Import Merc Prof",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Set UPDATE_DATE",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT MID_L11 FROM SMC_IMPORT_MERCHANT_PROFILE",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ImportMerchantProfileSql",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "B2K_IMPORT_MERCHANT_PROFILE",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Process MCRMRCH",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Copy Import Merc Prof",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat(\n    variables('HostImportB2k'),\n    variables('ServiceImportB2k'),\n    '?filename=B2K_MCRMRCH_',\n    variables('FileErrorDate'),\n    '.txt&containerName=b2k/',\n    formatDateTime(subtractFromTime(getFutureTime(7, 'Hour', 'yyyy-MM-dd HH:mm:ss'),1,'Day'),'yyyy/MM/dd')\n)",
						"type": "Expression"
					},
					"connectVia": {
						"referenceName": "shir",
						"type": "IntegrationRuntimeReference"
					},
					"method": "GET"
				}
			}
		],
		"variables": {
			"UPDATE_DATE": {
				"type": "String"
			},
			"FileErrorDate": {
				"type": "String"
			},
			"HostImportB2k": {
				"type": "String",
				"defaultValue": "https://smc-import-api-dev.se.scb.co.th"
			},
			"ServiceImportB2k": {
				"type": "String",
				"defaultValue": "/smc-import-b2k-service/scb/import-b2k-api/blob/process/mcrmrch"
			}
		},
		"folder": {
			"name": "SMC_B2K"
		},
		"annotations": [],
		"lastPublishTime": "2022-12-15T07:06:00Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}