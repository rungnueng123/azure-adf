{
	"name": "B2K_ValidateData",
	"properties": {
		"activities": [
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"dataset": {
						"referenceName": "B2K_MCRMRCH_DATA_ERROR",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup1').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "If Condition",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@if(equals(substring(string(item().prop_0),0,2), '01'),true,false)",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Append variable1_copy2",
										"type": "AppendVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "dataArray",
											"value": {
												"value": "@concat(\n    variables('emptyString'),\n    item().prop_0\n)",
												"type": "Expression"
											}
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Append variable1_copy1",
										"type": "AppendVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "dataArray",
											"value": {
												"value": "@concat(\n    '\u0001',\n    item().prop_0\n)",
												"type": "Expression"
											}
										}
									}
								]
							}
						},
						{
							"name": "If Condition",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@if(equals(string(length(item().prop_0)), '276'),true,false)",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Append variable1_copy1_copy2",
										"type": "AppendVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "dataArray",
											"value": {
												"value": "@concat(\n    item().prop_0,\n    '     '\n)",
												"type": "Expression"
											}
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Append variable1_copy1_copy1",
										"type": "AppendVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "dataArray",
											"value": {
												"value": "@concat(\n    item().prop_0,\n    '    '\n)",
												"type": "Expression"
											}
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Set variable1",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "dataStringTemp",
					"value": {
						"value": "@join(variables('dataArray'),'')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Set variable1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"additionalColumns": [
							{
								"name": "data",
								"value": {
									"value": "@variables('dataStringTemp')",
									"type": "Expression"
								}
							}
						],
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings",
							"copyBehavior": "MergeFiles"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "data",
									"type": "String"
								},
								"sink": {
									"type": "String",
									"physicalType": "String",
									"ordinal": 1
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "B2K_MCRMRCH_DATA_ERROR_TEMP",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "B2K_MCRMRCH_DATA_ERROR_MAPPING_TEMP",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Set variable2",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set variable1",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "dataString",
					"value": {
						"value": "@substring(variables('dataStringTemp'),1,sub(length(variables('dataStringTemp')),1))",
						"type": "Expression"
					}
				}
			}
		],
		"variables": {
			"dataArray": {
				"type": "Array"
			},
			"dataString": {
				"type": "String"
			},
			"dataStringTemp": {
				"type": "String"
			},
			"emptyString": {
				"type": "String"
			}
		},
		"folder": {
			"name": "SMC_B2K"
		},
		"annotations": []
	}
}